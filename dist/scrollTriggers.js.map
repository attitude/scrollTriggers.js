{"version":3,"sources":["../src/scrollTriggers.js"],"names":["addScrollingTriggers","addScrollingTriggersNoop","triggers","setScrollingTriggersFramerate","setScrollingTriggersFramerateNoop","newScrollFramerate","window","$document","document","documentElement","warn","console","warnNoop","scrollTriggersList","$body","body","screenHeight","updateScreenHeight","innerHeight","clientHeight","updateScrolledObjects","lastScrolledTime","Date","now","scrollFramerate","forEach","scrolltrigger","newInView","elementClientRects","element","getClientRects","length","top","Math","round","origin","bottom","inView","before","during","after","noop","throttledScroll","scrolledTime","castTriggerTypeOrNull","trigger","HTMLElement","getElementById","min","max","castArrayOfEmptyArray","Array","isArray","push","addEventListener","passive"],"mappings":"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","sourcesContent":["/**\n * @Author: Martin Adamko <@martin_adamko>\n * @Date: 2020-12-03T01:12:43+01:00\n * @Copyright: Martin Adamko\n * @license MIT\n * @flow\n**/\n\ntype ScrollTrigger = $Exact<{\n  after: () => void,\n  before: () => void,\n  bottom: ?number,\n  during: () => void,\n  element: HTMLElement,\n  inView: ?number, // -1: not yet in view, 0: in view, 1: was in view\n  origin: number,\n  top: ?number,\n}>\n\n// eslint-disable-next-line no-unused-vars\nlet addScrollingTriggers = function addScrollingTriggersNoop (triggers: ScrollTrigger[]): void { '' }\n// eslint-disable-next-line no-unused-vars\nlet setScrollingTriggersFramerate = function setScrollingTriggersFramerateNoop (newScrollFramerate: number): void { '' };\n\n(function (window: Window) {\n  'use strict'\n\n  const $document = window.document.documentElement\n\n  if (!$document) { return }\n\n  // eslint-disable-next-line no-console\n  const warn = (console && console.warn) || function warnNoop (...rest: mixed[]) { /**/ }\n\n  const scrollTriggersList: ScrollTrigger[] = []\n  const $body = window.document.body\n\n  if (!$body) { return }\n\n  let screenHeight = 0\n\n  const updateScreenHeight = function () {\n    screenHeight = window.innerHeight || $document.clientHeight || $body.clientHeight\n    updateScrolledObjects()\n  }\n\n  let lastScrolledTime = Date.now()\n  let scrollFramerate: number = 1000 / 25\n\n  const updateScrolledObjects = function () {\n    scrollTriggersList.forEach((scrolltrigger: ScrollTrigger) => {\n      let newInView = null\n      let elementClientRects = scrolltrigger.element.getClientRects()\n\n      if (elementClientRects.length === 0) {\n        return\n      }\n\n      elementClientRects = elementClientRects[0]\n\n      const top = Math.round(elementClientRects.top - (screenHeight * scrolltrigger.origin))\n      const bottom = Math.round(elementClientRects.bottom - (screenHeight * scrolltrigger.origin))\n\n      scrolltrigger.top = top\n      scrolltrigger.bottom = bottom\n\n      if (top > 0) {\n        // Comming: Distance of top border from middle is > 0\n        newInView = -1\n      } else if (bottom < 0) {\n        // Was: Distance of bottom border from middle is < 0\n        newInView = 1\n      } else {\n        // In view\n        newInView = 0\n      }\n\n      // Change\n      if (scrolltrigger.inView !== newInView) {\n        // > +1 FORWARD\n        // < -1 BACKWARD\n        if (newInView === -1) {\n          scrolltrigger.before()\n        } else if (newInView === 0) {\n          scrolltrigger.during()\n        } else {\n          scrolltrigger.after()\n        }\n      }\n\n      // Commit\n      scrolltrigger.inView = newInView\n    })\n  }\n  const noop = function () { '' }\n  const throttledScroll = function throttledScroll () {\n    const scrolledTime = Date.now()\n\n    if (scrolledTime - lastScrolledTime > scrollFramerate) {\n      lastScrolledTime = scrolledTime\n      updateScrolledObjects()\n    }\n  }\n\n  function castTriggerTypeOrNull (trigger: mixed): ?ScrollTrigger {\n    if (!trigger || typeof trigger !== 'object') {\n      return\n    }\n\n    const element: ?HTMLElement = trigger.element instanceof HTMLElement\n      ? trigger.element\n      : typeof trigger.element === 'string'\n        ? window.document.getElementById(trigger.element)\n        : null\n\n    if (!element) {\n      return\n    }\n\n    const inView = null // -1: not yet in view, 0: in view, 1: was in view\n    const bottom = null\n    const top = null\n    const before = typeof trigger.before === 'function' && trigger.before.length === 0\n      ? ((trigger.before: any): () => void)\n      : noop\n    const during = typeof trigger.during === 'function' && trigger.during.length === 0\n      ? ((trigger.during: any): () => void)\n      : noop\n    const after = typeof trigger.after === 'function' && trigger.after.length === 0\n      ? ((trigger.after: any): () => void)\n      : noop\n    const origin = typeof trigger.origin === 'number'\n      ? Math.min(1, Math.max(0, trigger.origin))\n      : 0.5\n\n    return {\n      after,\n      before,\n      bottom,\n      during,\n      element,\n      inView,\n      origin,\n      top,\n    }\n  }\n\n  function castArrayOfEmptyArray (triggers: mixed): $ReadOnlyArray<mixed> {\n    if (!Array.isArray(triggers)) {\n      warn('`triggers` must be an array', triggers)\n\n      return []\n    }\n\n    return triggers\n  }\n\n  addScrollingTriggers = function addScrollingTriggers (triggers: ScrollTrigger[]): void {\n    castArrayOfEmptyArray(triggers).forEach((trigger: mixed) => {\n      trigger = castTriggerTypeOrNull(trigger)\n\n      if (trigger) {\n        scrollTriggersList.push(trigger)\n      }\n    })\n\n    updateScreenHeight()\n    updateScrolledObjects()\n  }\n\n  setScrollingTriggersFramerate = function setScrollingTriggersFramerate (newScrollFramerate: number): void {\n    if (newScrollFramerate > 1000 / 10 && newScrollFramerate <= 1000 / 60) {\n      scrollFramerate = newScrollFramerate\n    } else {\n      warn('New frame rate must be within rangge 10fps (100ms) and 60fps (16.666ms).')\n    }\n  }\n\n  window.addEventListener('resize', updateScreenHeight)\n  window.addEventListener('scroll', throttledScroll, { passive: true })\n}(window))\n"],"file":"scrollTriggers.js"}